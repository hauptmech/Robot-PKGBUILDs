# This is an example PKGBUILD file. Use this as a start to creating your own,
# and remove these comments. For more information, see 'man PKGBUILD'.
# NOTE: Please fill out the license field for your package! If it is unknown,
# then please put 'unknown'.

# See http://wiki.archlinux.org/index.php/VCS_PKGBUILD_Guidelines
# for more information on packaging from Mercurial(hg) sources.

# Maintainer: Your Name <youremail@domain.com>
pkgname=canfestival-hg
pkgver=765
pkgrel=3
pkgdesc="CANOpen framework"
arch=('i686' 'x86_64')
url="http://www.canfestival.org"
license=('GPL')
groups=()
depends=()
makedepends=('mercurial' 'doxygen' 'latex2html')
optdepends=()
provides=('canfestival')
conflicts=('canfestival')
replaces=()
backup=()
options=()
install=canfestival.install
source=('canfestival.install')
noextract=()

_hgroot="http://dev.automforge.net"
_hgrepo=CanFestival-3

build() {
  cd "$srcdir"
  msg "Connecting to Mercurial server...."

  if [[ -d "$_hgrepo" ]]; then
    cd "$_hgrepo"
    hg pull -u
    msg "The local files are updated."
  else
    echo "cloning..."
    hg clone "$_hgroot" "$_hgrepo"
  fi

  msg "Mercurial checkout done or server timeout"
  msg "Starting build..."

  rm -rf "$srcdir/$_hgrepo-build"
  cp -r "$srcdir/$_hgrepo" "$srcdir/$_hgrepo-build"
  cd "$srcdir/$_hgrepo-build"

  sed -i 's/python/python2/g' examples/CANOpenShell/Makefile.in
  sed -i 's/python/python2/g' examples/TestMasterSlave/Makefile.in
  sed -i 's/python/python2/g' examples/DS401_Slave_Gui/Makefile.in
  sed -i 's/python/python2/g' examples/TestMasterMicroMod/Makefile.in
  sed -i 's/python/python2/g' examples/kerneltest/Makefile.in
  sed -i 's/python/python2/g' examples/TestMasterSlaveLSS/Makefile.in
  sed -i 's/python/python2/g' examples/DS401_Master/Makefile.in
  sed -i 's/ldconfig//g' Makefile.in
  sed -i 's/ln -sf.*$//g' objdictgen/Makefile.in
  sed -i 's/chmod 755.*$//g' objdictgen/Makefile.in
  sed -i 's|(PREFIX)/objdictgen|(PREFIX)/share/CanFestival-3/objdictgen|g' objdictgen/Makefile.in
  sed -i 's/env python/env python2/g' objdictgen/objdictedit.py

sed -i configure -f - <<'==='
/MAKEFILES=Makefile\.in/ a\
\\ drivers/can_socket/Makefile.in\\
===

  #
  # BUILD HERE
  #
  #./autogen.sh
  ./configure --prefix=${pkgdir}/usr --can=peak_linux

sed -i drivers/Makefile -f - <<'==='
/MAKE.*(CAN_DRIVER)/ a\
\t$(MAKE) -C can_socket $@
===

sed -i drivers/can_socket/Makefile -f - <<'==='
s/^CAN_DRIVER =.*/CAN_DRIVER = can_socket/
===

  make
  
  cd "$srcdir/$_hgrepo-build"/doc/doxygen
  doxygen Doxyfile
 
  cd "$srcdir/$_hgrepo-build"/doc/manual/en
  mkdir html
  latex2html -split 0 -dir html manual.tex
}

package() {
  cd "$srcdir/$_hgrepo-build"
  make DESTDIR="$pkgdir/" install 
  mkdir -p "$pkgdir"/usr/share/CanFestival-3/doc/{api,manual}
  cp -r doc/doxygen/html/* "$pkgdir"/usr/share/CanFestival-3/doc/api
  cp -r doc/manual/en/html/* "$pkgdir"/usr/share/CanFestival-3/doc/manual
}

# vim:set ts=2 sw=2 et:
md5sums=('aab7fbd4b74cb2ff7b70adac8630c47d')
